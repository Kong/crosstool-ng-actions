name: Build cross compilers
'on':
  workflow_dispatch:
    inputs:
      do_release:
        description: Create a release and upload files? (type "yes" to create)
        required: true
        type: boolean
        default: false
      release:
        description: Release tag and name
        required: true
permissions:
  contents: write # create release

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      upload_url: '${{ steps.create_release.outputs.upload_url }}'
    steps:
      - name: Create release
        uses: ncipollo/release-action@v1
        id: create_release
        if: '${{ github.event.inputs.do_release == ''true'' }}'
        with:
          tag: '${{ github.event.inputs.release }}'
          name: '${{ github.event.inputs.release }}'
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

  compile:
    needs: prepare
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      TARGET: '${{ matrix.target }}'
      CROSSTOOL_NG_VERSION: '1.25.0'
    strategy:
      matrix:
        include:
          # https://distrowatch.com/table.php?distribution=redhat
          # centos8 same as rhel8
          - target: aarch64-centos8-linux-gnu
            vendor: centos8
            libc: "2.28"
            linux: "4.18"
          - target: aarch64-centos9-linux-gnu
            vendor: centos9
            libc: "2.34"
            linux: "5.14"

          # https://docs.aws.amazon.com/linux/al2022/release-notes/version-compare-al2022.html
          - target: aarch64-amazonlinux2-linux-gnu
            vendor: amazonlinux2
            libc: "2.26"
            linux: "4.14"
          - target: aarch64-amazonlinux2022-linux-gnu
            vendor: amazonlinux2022
            libc: "2.34"
            linux: "5.15"

          - target: x86_64-multilib-linux-musl

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Cache Packages
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: |
            x-tools
          #key: ${{ hashFiles('.github/**.yml') }}-${{ matrix.target }}
          # for testing
          key: ${{ matrix.target }}

      - name: 'Install dependencies'
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |-
          sudo apt update
          sudo apt install build-essential autoconf bison flex texinfo \
            help2man gawk libtool libtool-bin libtool-doc libncurses5-dev python3-dev \
            python3-distutils git unzip

      - name: "Download and build crosstool-ng"
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |-
          wget http://crosstool-ng.org/download/crosstool-ng/crosstool-ng-$CROSSTOOL_NG_VERSION.tar.bz2
          tar xf crosstool-ng-$CROSSTOOL_NG_VERSION.tar.bz2
          cd crosstool-ng-$CROSSTOOL_NG_VERSION
          ./configure --enable-local
          make
          sudo make install

      - name: "Configure target ${{ matrix.target }}"
        if: matrix.target != 'x86_64-multilib-linux-musl' && steps.cache-deps.outputs.cache-hit != 'true'
        run: |-
          cd crosstool-ng-$CROSSTOOL_NG_VERSION
          ./ct-ng

          sed -i "/CT_TARGET_VENDOR/d" ./samples/aarch64-unknown-linux-gnu/crosstool.config

          linux_ver=${{ matrix.linux }}
          echo "CT_LINUX_V_${linux_ver//./_}=y" >> ./samples/aarch64-unknown-linux-gnu/crosstool.config

          libc_ver=${{ matrix.libc }}
          echo "CT_GLIBC_V_${libc_ver//./_}=y" >> ./samples/aarch64-unknown-linux-gnu/crosstool.config

          echo "CT_LOG_PROGRESS_BAR=n" >> ./samples/aarch64-unknown-linux-gnu/crosstool.config

          ./ct-ng aarch64-unknown-linux-gnu
          
      - name: "Configure target (musl)"
        if: matrix.target == 'x86_64-multilib-linux-musl' && steps.cache-deps.outputs.cache-hit != 'true'
        run: |-
          cd crosstool-ng-$CROSSTOOL_NG_VERSION
          echo "CT_LOG_PROGRESS_BAR=n" >> ./samples/${{ matrix.target }}/crosstool.config

          ./ct-ng ${{ matrix.target }}

      - name: 'Build ${{ matrix.target }}'
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |-
          cd crosstool-ng-$CROSSTOOL_NG_VERSION

          # XXX https://github.com/crosstool-ng/crosstool-ng/issues/1832
          sed -i 's/CT_ZLIB_VERSION="1.2.12"/CT_ZLIB_VERSION="1.2.13"/' .config

          export HOME=$GITHUB_WORKSPACE

          ./ct-ng build

          find $HOME/x-tools/

      - name: 'Package ${{ matrix.target }} (aarch64-unknown-linux-gnu)'
        id: package
        run: |-
          cd crosstool-ng-$CROSSTOOL_NG_VERSION

          target=${{ matrix.target }}
          if [[ "$target" != "x86_64-multilib-linux-musl" ]]; then
            target="aarch64-unknown-linux-gnu"
          fi

          tar -zcvf ../${{ matrix.target }}.tar.gz -C $GITHUB_WORKSPACE/x-tools/$target .


      - id: upload-artifacts
        name: Upload artifacts
        if: '${{ success() }}'
        continue-on-error: false
        uses: actions/upload-artifact@v3
        with:
          path: '${{ matrix.target }}.tar.gz'
          name: '${{ matrix.target }}.tar.gz'

      - id: upload-releases
        name: Upload to releases
        uses: actions/upload-release-asset@v1
        if: '${{ github.event.inputs.do_release == ''yes'' }}'
        continue-on-error: false
        with:
          asset_path: '${{ matrix.target }}.tar.gz'
          asset_name: >-
            ${{ matrix.target }}.tar.gz
          upload_url: '${{ needs.prepare.outputs.upload_url }}'
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
