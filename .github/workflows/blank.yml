name: Build cross compilers
'on':
  workflow_dispatch:
    inputs:
      do_release:
        description: Create a release and upload files? (type "yes" to create)
        required: true
        default: 'no'
      release:
        description: Release tag and name
        required: true
jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      upload_url: '${{ steps.create_release.outputs.upload_url }}'
    steps:
      - name: Create release
        uses: ncipollo/release-action@v1
        id: create_release
        if: '${{ github.event.inputs.do_release == ''yes'' }}'
        with:
          tag: '${{ github.event.inputs.release }}'
          name: '${{ github.event.inputs.release }}'
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
  compile:
    needs: prepare
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        target:
          - x86_64-centos7-linux-gnu
    env:
      TARGET: '${{ matrix.target }}'
      CROSSTOOL_NG_VERSION: '1.25.0'
    steps:
      - name: 'Install dependencies'
        run: |-
          sudo apt update
          sudo apt install build-essential autoconf bison flex texinfo \
            help2man gawk libtool libtool-bin libtool-doc libncurses5-dev python3-dev \
            python3-distutils git unzip

      - name: "Download and build crosstool-ng"
        run: |-
          wget http://crosstool-ng.org/download/crosstool-ng/crosstool-ng-$CROSSTOOL_NG_VERSION.tar.bz2
          tar xf crosstool-ng-$CROSSTOOL_NG_VERSION.tar.bz2
          cd crosstool-ng-$CROSSTOOL_NG_VERSION
          ./configure --enable-local
          make
          sudo make install


      - name: "Configure target"
        run: |-
          cd crosstool-ng-$CROSSTOOL_NG_VERSION
          ./ct-ng
          
          cat << EOF >> ./samples/x86_64-centos7-linux-gnu/crosstool.config
            CT_CONFIG_VERSION="4"
            CT_OBSOLETE=y
            CT_ARCH_X86=y
            CT_ARCH_64=y
            CT_TARGET_VENDOR="centos7"
            CT_KERNEL_LINUX=y
            CT_LINUX_V_3_10=y
            # CT_KERNEL_LINUX_INSTALL_CHECK is not set
            CT_GLIBC_V_2_17=y
            CT_CC_LANG_CXX=y
            # XXX https://github.com/crosstool-ng/crosstool-ng/issues/1832
            CT_ZLIB_VERSION="1.2.13"
          EOF

      - name: 'Build ${{ matrix.target }}'
        run: |-
          cd crosstool-ng-$CROSSTOOL_NG_VERSION

          ./ct-ng x86_64-centos7-linux-gnu

          ls $HOME/x-tools/

      - name: 'Package ${{ matrix.target }}'
        id: package
        run: |-
          cd crosstool-ng-$CROSSTOOL_NG_VERSION

          tar -C $HOME/x-tools/${{ matrix.target }} zcvf ../output-${{ matrix.target }}.tar.gz
          echo "source_escaped=${REPO%%/*}_${REPO##*/}" >> $GITHUB_OUTPUT

      - id: upload-artifacts-0
        name: Upload artifacts 0
        if: '${{ success() }}'
        continue-on-error: false
        uses: actions/upload-artifact@v3
        with:
          path: 'output-${{ matrix.target }}.tar.gz'
          name: '${{ matrix.target }}-${{ steps.package.outputs.source_escaped }}'
      - id: upload-releases-0
        name: Upload to releases 0
        uses: actions/upload-release-asset@v1
        if: '${{ github.event.inputs.do_release == ''yes'' }}'
        continue-on-error: false
        with:
          asset_path: 'output-${{ matrix.target }}.tar.gz'
          asset_name: >-
            output-${{ matrix.target }}-${{ steps.package.outputs.source_escaped
            }}.tar.gz
          upload_url: '${{ needs.prepare.outputs.upload_url }}'
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      - id: upload-artifacts-1
        name: Upload artifacts 1
        if: '${{ steps.upload-artifacts-0.outcome == ''failure'' }}'
        continue-on-error: false
        uses: actions/upload-artifact@v3
        with:
          path: 'output-${{ matrix.target }}.tar.gz'
          name: '${{ matrix.target }}-${{ steps.package.outputs.source_escaped }}'
      - id: upload-releases-1
        name: Upload to releases 1
        uses: actions/upload-release-asset@v1
        if: >-
          ${{ github.event.inputs.do_release == 'yes' &&
          steps.upload-releases-0.outcome == 'failure' }}
        continue-on-error: false
        with:
          asset_path: 'output-${{ matrix.target }}.tar.gz'
          asset_name: >-
            output-${{ matrix.target }}-${{ steps.package.outputs.source_escaped
            }}.tar.gz
          upload_url: '${{ needs.prepare.outputs.upload_url }}'
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      - id: upload-artifacts-2
        name: Upload artifacts 2
        if: '${{ steps.upload-artifacts-1.outcome == ''failure'' }}'
        continue-on-error: false
        uses: actions/upload-artifact@v3
        with:
          path: 'output-${{ matrix.target }}.tar.gz'
          name: '${{ matrix.target }}-${{ steps.package.outputs.source_escaped }}'
      - id: upload-releases-2
        name: Upload to releases 2
        uses: actions/upload-release-asset@v1
        if: >-
          ${{ github.event.inputs.do_release == 'yes' &&
          steps.upload-releases-1.outcome == 'failure' }}
        continue-on-error: false
        with:
          asset_path: 'output-${{ matrix.target }}.tar.gz'
          asset_name: >-
            output-${{ matrix.target }}-${{ steps.package.outputs.source_escaped
            }}.tar.gz
          upload_url: '${{ needs.prepare.outputs.upload_url }}'
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      - id: upload-artifacts-3
        name: Upload artifacts 3
        if: '${{ steps.upload-artifacts-2.outcome == ''failure'' }}'
        continue-on-error: false
        uses: actions/upload-artifact@v3
        with:
          path: 'output-${{ matrix.target }}.tar.gz'
          name: '${{ matrix.target }}-${{ steps.package.outputs.source_escaped }}'
      - id: upload-releases-3
        name: Upload to releases 3
        uses: actions/upload-release-asset@v1
        if: >-
          ${{ github.event.inputs.do_release == 'yes' &&
          steps.upload-releases-2.outcome == 'failure' }}
        continue-on-error: false
        with:
          asset_path: 'output-${{ matrix.target }}.tar.gz'
          asset_name: >-
            output-${{ matrix.target }}-${{ steps.package.outputs.source_escaped
            }}.tar.gz
          upload_url: '${{ needs.prepare.outputs.upload_url }}'
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      - id: upload-artifacts-4
        name: Upload artifacts 4
        if: '${{ steps.upload-artifacts-3.outcome == ''failure'' }}'
        continue-on-error: true
        uses: actions/upload-artifact@v3
        with:
          path: 'output-${{ matrix.target }}.tar.gz'
          name: '${{ matrix.target }}-${{ steps.package.outputs.source_escaped }}'
      - id: upload-releases-4
        name: Upload to releases 4
        uses: actions/upload-release-asset@v1
        if: >-
          ${{ github.event.inputs.do_release == 'yes' &&
          steps.upload-releases-3.outcome == 'failure' }}
        continue-on-error: true
        with:
          asset_path: 'output-${{ matrix.target }}.tar.gz'
          asset_name: >-
            output-${{ matrix.target }}-${{ steps.package.outputs.source_escaped
            }}.tar.gz
          upload_url: '${{ needs.prepare.outputs.upload_url }}'
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
